{
  "name": "AB",
  "timezoneOffset": "+0000",
  "description": "动漫",
  "url": "https://animebytes.tv/",
  "icon": "https://animebytes.tv/favicon.ico",
  "tags": ["动漫"],
  "schema": "",
  "host": "animebytes.tv",
  "levelRequirements": [{
    "level": "1", 
    "name": "User",
    "interval": "1",
    "uploaded": "10.5GB",
    "ratio": "0.5",
    "privilege": "Send invites"
  },{
    "level": "2", 
    "name": "Power User",
    "interval": "2",
    "uploads": "10",
    "uploaded": "25GB",
    "ratio": "0.7",
    "privilege": "Invites forums; Exempt from inactivity pruning"
  },{
    "level": "3", 
    "name": "Elite",
    "interval": "30D",
    "uploads": "50",
    "uploaded": "100GB",
    "ratio": "0.8",
    "privilege": ""
  },{
    "level": "4", 
    "name": "Torrent Master",
    "interval": "90D",
    "uploads": "100",
    "uploaded": "500GB",
    "ratio": "0.9",
    "privilege": "Send invites even when we are above the user limit"
  },{
    "level": "5", 
    "name": "Legend",
    "interval": "180D",
    "uploads": "500",
    "uploaded": "1TB",
    "ratio": "1",
    "privilege": ""
  }],
  "collaborator": [
    "MewX",
    "sabersalv"
  ],
  "supportedFeatures": {
    "userData": true,
    "search": true,
    "imdbSearch": false,
    "sendTorrent": false
  },
  "plugins": [
    {
      "name": "Custom Torrent List",
      "pages": [
        "/series.php",
        "/torrents.php",
        "/torrents2.php"
      ],
      "scripts": [
        "/schemas/NexusPHP/common.js",
        "userTorrents.js"
      ]
    }
  ],
  "securityKeyFields": [
    "authkey",
    "torrent_pass"
  ],
  "searchEntry": [
    {
      "entry": "/torrents.php?searchstr=$key$&force_default=1",
      "name": "default",
      "resultType": "html",
      "parseScriptFile": "getSearchResult.js",
      "resultSelector": "div.group_cont",
      "enabled": true
    }
  ],
  "selectors": {
    "userBaseInfo": {
      "page": "/",
      "fields": {
        "id": {
          "selector": ["#stats_menu > a:first"],
          "attribute": "href",
          "filters": ["query ? query.getQueryString('userid'):''"]
        },
        "name": {
          "selector": ["a.username:first"]
        },
        "isLogged": {
          "selector": ["a[href*='/user/logout']"],
          "filters": ["query.length>0"]
        },
        "messageCount": {
          "selector": [".alertbar.message a[href*='inbox.php']"],
          "filters": ["query.text().match(/(\\d+)/)", "(query && query.length>=2)?parseInt(query[1]):0"]
        }
      }
    },
    "userExtendInfo": {
      "page": "/user.php?id=$user.id$",
      "fields": {
        "uploads":{
          "selector": ["dt:contains('Torrents Uploaded:') + dd"],
          "filters": ["query.text().replace(/,/g,'').match(/[\\d]+/)[0]", "parseInt(query)"]
        },
        "uploaded": {
          "selector": ["dt:contains('Uploaded:') + dd > span"],
          "filters": ["query.attr('title').replace(/,/g,'')", "parseFloat(query)"]
        },
        "downloaded": {
          "selector": ["dt:contains('Downloaded:') + dd > span"],
          "filters": ["query.attr('title').replace(/,/g,'')", "parseFloat(query)"]
        },
        "unsatisfieds": {
          "selector": ["ul.stats li:contains('H&Rs:')"],
          "attribute": "title",
          "filters": ["query.replace(/,/g,'').match(/[\\d]+/g)", "query && query.length >= 2 ? parseInt(query[1]) : 0"]
        },
        "ratio": {
          "selector": ["dt:contains('Ratio:') + dd > span"],
          "attribute": "title",
          "filters": ["query ? query.replace(/,/g,'') : null"]
        },
        "seeding": {
          "selector": ["dt:contains('Seeding:') + dd"],
          "filters": [
            "query.text().trim().replace(/,|\\n/g,'').match(/([\\d.]+)/)",
            "(query && query.length>=2)?parseFloat(query[1]):null"
          ]
        },
        "seedingSize": {
          "selector": ["dt:contains('Total seed size:') + dd > span"],
          "filters": ["query.text().trim().sizeToNumber()"]
        },
        "levelName": {
          "selector": ["dt:contains('Class:') + dd"],
          "filters": ["query.text()"]
        },
        "bonus": {
          "selector": ["#yen_count > a"],
          "filters": ["query.text().replace(/,|\\n|\\s+|¥/g,'')"]
        },
        "bonusPerHour": {
          "selector": ["dt:contains('Yen per day:') + dd"],
          "filters": ["query.text().replace(/,/g,'').match(/[\\d.]+/)", "query ? parseFloat(query[0]) / 24 : 0"]
        },
        "joinTime": {
          "selector": ["dt:contains('Joined:') + dd > span"],
          "filters": ["dateTime(query.attr('title').replace(/\\s[A-Z]+$/,'')).isValid() ? query.attr('title').replace(/\\s[A-Z]+$/,'') : query.text()", "dateTime(query).isValid() ? dateTime(query).valueOf() : query"]
        },
        "averageSeedtime": {
          "selector": ["dt:contains('Average Seedtime') + dd > span", "dt:contains('平均做种时间') + dd > span", "dt:contains('平均做種時間') + dd > span"],
          "filters": ["query.text().trim().timeToDays()"]
        }
      }
    }
  }
}
